{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API",
    "version": "1.0.0"
  },
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "A list of users" }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                },
                "required": ["name", "email"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Invalid input" }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "List all orders",
        "responses": {
          "200": { "description": "List of orders" }
        }
      },
      "post": {
        "summary": "Create an order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "string" },
                  "items": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["userId", "items"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Order created" }
        }
      }
    },
    "/orders/{orderId}/status": {
      "patch": {
        "summary": "Update order status",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Status updated" },
          "400": { "description": "Invalid status" }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "responses": {
          "200": { "description": "OK" }
        }
      }
    }
  }
}